<?php return array (
  'unique_key' => 'name',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'PluginEvents' => 
    array (
      'dbb952dbf7ee65a420ab54e75128d95a' => 
      array (
        'preserve_keys' => true,
        'update_object' => false,
        'unique_key' => 
        array (
          0 => 'pluginid',
          1 => 'event',
        ),
        'class' => 'modPluginEvent',
        'object' => '{"pluginid":0,"event":"OnChunkFormPrerender","priority":0,"propertyset":0}',
        'guid' => '4c2af27f5c6b52e77b0dea99be06139a',
        'native_key' => 
        array (
          0 => 0,
          1 => 'OnChunkFormPrerender',
        ),
        'signature' => '1d9f03904c0dd764cd9735efbfdb3d5b',
      ),
      'a6520508fed4feba98947a1bfd317cfd' => 
      array (
        'preserve_keys' => true,
        'update_object' => false,
        'unique_key' => 
        array (
          0 => 'pluginid',
          1 => 'event',
        ),
        'class' => 'modPluginEvent',
        'object' => '{"pluginid":0,"event":"OnPluginFormPrerender","priority":0,"propertyset":0}',
        'guid' => 'c49515760235eb10cd84771eeb56607c',
        'native_key' => 
        array (
          0 => 0,
          1 => 'OnPluginFormPrerender',
        ),
        'signature' => '652f91f2ba3005350bb7ca3588d343d2',
      ),
      '27bf55f6587716e79861710be9f1e555' => 
      array (
        'preserve_keys' => true,
        'update_object' => false,
        'unique_key' => 
        array (
          0 => 'pluginid',
          1 => 'event',
        ),
        'class' => 'modPluginEvent',
        'object' => '{"pluginid":0,"event":"OnSnipFormPrerender","priority":0,"propertyset":0}',
        'guid' => '799d9f3f4cdff1923c466d9339517f8e',
        'native_key' => 
        array (
          0 => 0,
          1 => 'OnSnipFormPrerender',
        ),
        'signature' => '4717fc733914157a74792a31ee8606c3',
      ),
      '32440e1b496e52735126031fe40cb64b' => 
      array (
        'preserve_keys' => true,
        'update_object' => false,
        'unique_key' => 
        array (
          0 => 'pluginid',
          1 => 'event',
        ),
        'class' => 'modPluginEvent',
        'object' => '{"pluginid":0,"event":"OnTempFormPrerender","priority":0,"propertyset":0}',
        'guid' => '19a7b172cd67b4fbc0acbc8964cf4cbc',
        'native_key' => 
        array (
          0 => 0,
          1 => 'OnTempFormPrerender',
        ),
        'signature' => '0c867aea2df13ccb5a867f7ff6e2cc26',
      ),
      '8effcb2cef895e017f8008215617b791' => 
      array (
        'preserve_keys' => true,
        'update_object' => false,
        'unique_key' => 
        array (
          0 => 'pluginid',
          1 => 'event',
        ),
        'class' => 'modPluginEvent',
        'object' => '{"pluginid":0,"event":"OnFileEditFormPrerender","priority":0,"propertyset":0}',
        'guid' => '846bb101129678e320fe138c85faf423',
        'native_key' => 
        array (
          0 => 0,
          1 => 'OnFileEditFormPrerender',
        ),
        'signature' => 'e7e62180e5a0ab3dcc0d6f57a4b11aa2',
      ),
      'e8c8c709cd42a8d91bc0174117bc0ea0' => 
      array (
        'preserve_keys' => true,
        'update_object' => false,
        'unique_key' => 
        array (
          0 => 'pluginid',
          1 => 'event',
        ),
        'class' => 'modPluginEvent',
        'object' => '{"pluginid":0,"event":"OnFileCreateFormPrerender","priority":0,"propertyset":0}',
        'guid' => 'e10f5ad2874fa869fecc1cf7a6b5595c',
        'native_key' => 
        array (
          0 => 0,
          1 => 'OnFileCreateFormPrerender',
        ),
        'signature' => 'f7dea5951d9e655e8972882c61c4ebf4',
      ),
      '099ffadf471060cab908d0f9b4dcbf2e' => 
      array (
        'preserve_keys' => true,
        'update_object' => false,
        'unique_key' => 
        array (
          0 => 'pluginid',
          1 => 'event',
        ),
        'class' => 'modPluginEvent',
        'object' => '{"pluginid":0,"event":"OnDocFormPrerender","priority":0,"propertyset":0}',
        'guid' => '9d85cb7544e1c7114a3bda3917e01c1a',
        'native_key' => 
        array (
          0 => 0,
          1 => 'OnDocFormPrerender',
        ),
        'signature' => '0d4ad9e9211ca24b582ee0c31d43e72e',
      ),
      'fa9cdfb277a19d38ace5375875a6875b' => 
      array (
        'preserve_keys' => true,
        'update_object' => false,
        'unique_key' => 
        array (
          0 => 'pluginid',
          1 => 'event',
        ),
        'class' => 'modPluginEvent',
        'object' => '{"pluginid":0,"event":"OnRichTextEditorRegister","priority":0,"propertyset":0}',
        'guid' => '630887c94b5c887b9c0c5224f7fc5c76',
        'native_key' => 
        array (
          0 => 0,
          1 => 'OnRichTextEditorRegister',
        ),
        'signature' => '5fc4c364f5abbb70ce0220c4a76e16b7',
      ),
      'e7e6cf0d6827fd0a271cdeaec0ec11d7' => 
      array (
        'preserve_keys' => true,
        'update_object' => false,
        'unique_key' => 
        array (
          0 => 'pluginid',
          1 => 'event',
        ),
        'class' => 'modPluginEvent',
        'object' => '{"pluginid":0,"event":"OnManagerPageBeforeRender","priority":0,"propertyset":0}',
        'guid' => '2697a4ac44f54fd2adfb7454a741cb59',
        'native_key' => 
        array (
          0 => 0,
          1 => 'OnManagerPageBeforeRender',
        ),
        'signature' => 'bbf0c9b81fa4bda556fa6270000a99ba',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'PluginEvents' => 
    array (
      'preserve_keys' => true,
      'update_object' => false,
      'unique_key' => 
      array (
        0 => 'pluginid',
        1 => 'event',
      ),
    ),
  ),
  'namespace' => 'ace',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"ace-1.6.5-pl\\/modPlugin\\/047469d924ae35a07e059afe0639a7e2\\/0\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"ace"}',
    ),
    1 => 
    array (
      'type' => 'file',
      'body' => '{"source":"ace-1.6.5-pl\\/modPlugin\\/047469d924ae35a07e059afe0639a7e2\\/1\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"ace"}',
    ),
    2 => 
    array (
      'type' => 'php',
      'body' => '{"source":"ace-1.6.5-pl\\/modPlugin\\/047469d924ae35a07e059afe0639a7e2.transport.resolver.resolver","name":"transport.resolver","type":"php"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'd5ad0d9443bcca6e637b2c03e440e1b8',
  'package' => 'modx',
  'class' => 'modPlugin',
  'signature' => '047469d924ae35a07e059afe0639a7e2',
  'native_key' => 1,
  'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"Ace","description":"Ace code editor plugin for MODx Revolution","editor_type":0,"category":0,"cache_type":0,"plugincode":"\\/**\\n * Ace Source Editor Plugin\\n *\\n * Events: OnManagerPageBeforeRender, OnRichTextEditorRegister, OnSnipFormPrerender,\\n * OnTempFormPrerender, OnChunkFormPrerender, OnPluginFormPrerender,\\n * OnFileCreateFormPrerender, OnFileEditFormPrerender, OnDocFormPrerender\\n *\\n * @author Danil Kostin <danya.postfactum(at)gmail.com>\\n *\\n * @package ace\\n *\\n * @var array $scriptProperties\\n * @var Ace $ace\\n *\\/\\nif ($modx->event->name == \'OnRichTextEditorRegister\') {\\n    $modx->event->output(\'Ace\');\\n    return;\\n}\\n\\nif ($modx->getOption(\'which_element_editor\', null, \'Ace\') !== \'Ace\') {\\n    return;\\n}\\n\\n$ace = $modx->getService(\'ace\', \'Ace\', $modx->getOption(\'ace.core_path\', null, $modx->getOption(\'core_path\').\'components\\/ace\\/\').\'model\\/ace\\/\');\\n$ace->initialize();\\n\\n$extensionMap = array(\\n    \'tpl\'   => \'text\\/x-smarty\',\\n    \'htm\'   => \'text\\/html\',\\n    \'html\'  => \'text\\/html\',\\n    \'css\'   => \'text\\/css\',\\n    \'scss\'  => \'text\\/x-scss\',\\n    \'less\'  => \'text\\/x-less\',\\n    \'svg\'   => \'image\\/svg+xml\',\\n    \'xml\'   => \'application\\/xml\',\\n    \'xsl\'   => \'application\\/xml\',\\n    \'js\'    => \'application\\/javascript\',\\n    \'json\'  => \'application\\/json\',\\n    \'php\'   => \'application\\/x-php\',\\n    \'sql\'   => \'text\\/x-sql\',\\n    \'md\'    => \'text\\/x-markdown\',\\n    \'txt\'   => \'text\\/plain\',\\n    \'twig\'  => \'text\\/x-twig\'\\n);\\n\\n\\/\\/ Defines wether we should highlight modx tags\\n$modxTags = false;\\nswitch ($modx->event->name) {\\n    case \'OnSnipFormPrerender\':\\n        $field = \'modx-snippet-snippet\';\\n        $mimeType = \'application\\/x-php\';\\n        break;\\n    case \'OnTempFormPrerender\':\\n        $field = \'modx-template-content\';\\n        $modxTags = true;\\n\\n        switch (true) {\\n            case $modx->getOption(\'twiggy_class\'):\\n                $mimeType = \'text\\/x-twig\';\\n                break;\\n            case $modx->getOption(\'pdotools_fenom_parser\'):\\n                $mimeType = \'text\\/x-smarty\';\\n                break;\\n            default:\\n                $mimeType = \'text\\/html\';\\n                break;\\n        }\\n\\n        break;\\n    case \'OnChunkFormPrerender\':\\n        $field = \'modx-chunk-snippet\';\\n        if ($modx->controller->chunk && $modx->controller->chunk->isStatic()) {\\n            $extension = pathinfo($modx->controller->chunk->getSourceFile(), PATHINFO_EXTENSION);\\n            $mimeType = isset($extensionMap[$extension]) ? $extensionMap[$extension] : \'text\\/plain\';\\n        } else {\\n            $mimeType = \'text\\/html\';\\n        }\\n        $modxTags = true;\\n\\n        switch (true) {\\n            case $modx->getOption(\'twiggy_class\'):\\n                $mimeType = \'text\\/x-twig\';\\n                break;\\n            case $modx->getOption(\'pdotools_fenom_default\'):\\n                $mimeType = \'text\\/x-smarty\';\\n                break;\\n            default:\\n                $mimeType = \'text\\/html\';\\n                break;\\n        }\\n\\n        break;\\n    case \'OnPluginFormPrerender\':\\n        $field = \'modx-plugin-plugincode\';\\n        $mimeType = \'application\\/x-php\';\\n        break;\\n    case \'OnFileCreateFormPrerender\':\\n        $field = \'modx-file-content\';\\n        $mimeType = \'text\\/plain\';\\n        break;\\n    case \'OnFileEditFormPrerender\':\\n        $field = \'modx-file-content\';\\n        $extension = pathinfo($scriptProperties[\'file\'], PATHINFO_EXTENSION);\\n        $mimeType = isset($extensionMap[$extension])\\n            ? $extensionMap[$extension]\\n            : \'text\\/plain\';\\n        $modxTags = $extension == \'tpl\';\\n        break;\\n    case \'OnDocFormPrerender\':\\n        if (!$modx->controller->resourceArray) {\\n            return;\\n        }\\n        $field = \'ta\';\\n        $mimeType = $modx->getObject(\'modContentType\', $modx->controller->resourceArray[\'content_type\'])->get(\'mime_type\');\\n\\n        switch (true) {\\n            case $mimeType == \'text\\/html\' && $modx->getOption(\'twiggy_class\'):\\n                $mimeType = \'text\\/x-twig\';\\n                break;\\n            case $mimeType == \'text\\/html\' && $modx->getOption(\'pdotools_fenom_parser\'):\\n                $mimeType = \'text\\/x-smarty\';\\n                break;\\n        }\\n\\n        if ($modx->getOption(\'use_editor\')){\\n            $richText = $modx->controller->resourceArray[\'richtext\'];\\n            $classKey = $modx->controller->resourceArray[\'class_key\'];\\n            if ($richText || in_array($classKey, array(\'modStaticResource\',\'modSymLink\',\'modWebLink\',\'modXMLRPCResource\'))) {\\n                $field = false;\\n            }\\n        }\\n        $modxTags = true;\\n        break;\\n    default:\\n        return;\\n}\\n\\n$modxTags = (int) $modxTags;\\n$script = \'\';\\nif ($field) {\\n    $script .= \\"MODx.ux.Ace.replaceComponent(\'$field\', \'$mimeType\', $modxTags);\\";\\n}\\n\\nif ($modx->event->name == \'OnDocFormPrerender\' && !$modx->getOption(\'use_editor\')) {\\n    $script .= \\"MODx.ux.Ace.replaceTextAreas(Ext.query(\'.modx-richtext\'));\\";\\n}\\n\\nif ($script) {\\n    $modx->controller->addHtml(\'<script>Ext.onReady(function() {\' . $script . \'});<\\/script>\');\\n}","locked":0,"properties":null,"disabled":0,"moduleguid":"","static":0,"static_file":"ace\\/elements\\/plugins\\/ace.plugin.php","content":"\\/**\\n * Ace Source Editor Plugin\\n *\\n * Events: OnManagerPageBeforeRender, OnRichTextEditorRegister, OnSnipFormPrerender,\\n * OnTempFormPrerender, OnChunkFormPrerender, OnPluginFormPrerender,\\n * OnFileCreateFormPrerender, OnFileEditFormPrerender, OnDocFormPrerender\\n *\\n * @author Danil Kostin <danya.postfactum(at)gmail.com>\\n *\\n * @package ace\\n *\\n * @var array $scriptProperties\\n * @var Ace $ace\\n *\\/\\nif ($modx->event->name == \'OnRichTextEditorRegister\') {\\n    $modx->event->output(\'Ace\');\\n    return;\\n}\\n\\nif ($modx->getOption(\'which_element_editor\', null, \'Ace\') !== \'Ace\') {\\n    return;\\n}\\n\\n$ace = $modx->getService(\'ace\', \'Ace\', $modx->getOption(\'ace.core_path\', null, $modx->getOption(\'core_path\').\'components\\/ace\\/\').\'model\\/ace\\/\');\\n$ace->initialize();\\n\\n$extensionMap = array(\\n    \'tpl\'   => \'text\\/x-smarty\',\\n    \'htm\'   => \'text\\/html\',\\n    \'html\'  => \'text\\/html\',\\n    \'css\'   => \'text\\/css\',\\n    \'scss\'  => \'text\\/x-scss\',\\n    \'less\'  => \'text\\/x-less\',\\n    \'svg\'   => \'image\\/svg+xml\',\\n    \'xml\'   => \'application\\/xml\',\\n    \'xsl\'   => \'application\\/xml\',\\n    \'js\'    => \'application\\/javascript\',\\n    \'json\'  => \'application\\/json\',\\n    \'php\'   => \'application\\/x-php\',\\n    \'sql\'   => \'text\\/x-sql\',\\n    \'md\'    => \'text\\/x-markdown\',\\n    \'txt\'   => \'text\\/plain\',\\n    \'twig\'  => \'text\\/x-twig\'\\n);\\n\\n\\/\\/ Defines wether we should highlight modx tags\\n$modxTags = false;\\nswitch ($modx->event->name) {\\n    case \'OnSnipFormPrerender\':\\n        $field = \'modx-snippet-snippet\';\\n        $mimeType = \'application\\/x-php\';\\n        break;\\n    case \'OnTempFormPrerender\':\\n        $field = \'modx-template-content\';\\n        $modxTags = true;\\n\\n        switch (true) {\\n            case $modx->getOption(\'twiggy_class\'):\\n                $mimeType = \'text\\/x-twig\';\\n                break;\\n            case $modx->getOption(\'pdotools_fenom_parser\'):\\n                $mimeType = \'text\\/x-smarty\';\\n                break;\\n            default:\\n                $mimeType = \'text\\/html\';\\n                break;\\n        }\\n\\n        break;\\n    case \'OnChunkFormPrerender\':\\n        $field = \'modx-chunk-snippet\';\\n        if ($modx->controller->chunk && $modx->controller->chunk->isStatic()) {\\n            $extension = pathinfo($modx->controller->chunk->getSourceFile(), PATHINFO_EXTENSION);\\n            $mimeType = isset($extensionMap[$extension]) ? $extensionMap[$extension] : \'text\\/plain\';\\n        } else {\\n            $mimeType = \'text\\/html\';\\n        }\\n        $modxTags = true;\\n\\n        switch (true) {\\n            case $modx->getOption(\'twiggy_class\'):\\n                $mimeType = \'text\\/x-twig\';\\n                break;\\n            case $modx->getOption(\'pdotools_fenom_default\'):\\n                $mimeType = \'text\\/x-smarty\';\\n                break;\\n            default:\\n                $mimeType = \'text\\/html\';\\n                break;\\n        }\\n\\n        break;\\n    case \'OnPluginFormPrerender\':\\n        $field = \'modx-plugin-plugincode\';\\n        $mimeType = \'application\\/x-php\';\\n        break;\\n    case \'OnFileCreateFormPrerender\':\\n        $field = \'modx-file-content\';\\n        $mimeType = \'text\\/plain\';\\n        break;\\n    case \'OnFileEditFormPrerender\':\\n        $field = \'modx-file-content\';\\n        $extension = pathinfo($scriptProperties[\'file\'], PATHINFO_EXTENSION);\\n        $mimeType = isset($extensionMap[$extension])\\n            ? $extensionMap[$extension]\\n            : \'text\\/plain\';\\n        $modxTags = $extension == \'tpl\';\\n        break;\\n    case \'OnDocFormPrerender\':\\n        if (!$modx->controller->resourceArray) {\\n            return;\\n        }\\n        $field = \'ta\';\\n        $mimeType = $modx->getObject(\'modContentType\', $modx->controller->resourceArray[\'content_type\'])->get(\'mime_type\');\\n\\n        switch (true) {\\n            case $mimeType == \'text\\/html\' && $modx->getOption(\'twiggy_class\'):\\n                $mimeType = \'text\\/x-twig\';\\n                break;\\n            case $mimeType == \'text\\/html\' && $modx->getOption(\'pdotools_fenom_parser\'):\\n                $mimeType = \'text\\/x-smarty\';\\n                break;\\n        }\\n\\n        if ($modx->getOption(\'use_editor\')){\\n            $richText = $modx->controller->resourceArray[\'richtext\'];\\n            $classKey = $modx->controller->resourceArray[\'class_key\'];\\n            if ($richText || in_array($classKey, array(\'modStaticResource\',\'modSymLink\',\'modWebLink\',\'modXMLRPCResource\'))) {\\n                $field = false;\\n            }\\n        }\\n        $modxTags = true;\\n        break;\\n    default:\\n        return;\\n}\\n\\n$modxTags = (int) $modxTags;\\n$script = \'\';\\nif ($field) {\\n    $script .= \\"MODx.ux.Ace.replaceComponent(\'$field\', \'$mimeType\', $modxTags);\\";\\n}\\n\\nif ($modx->event->name == \'OnDocFormPrerender\' && !$modx->getOption(\'use_editor\')) {\\n    $script .= \\"MODx.ux.Ace.replaceTextAreas(Ext.query(\'.modx-richtext\'));\\";\\n}\\n\\nif ($script) {\\n    $modx->controller->addHtml(\'<script>Ext.onReady(function() {\' . $script . \'});<\\/script>\');\\n}"}',
);